import discord
import aiomcrcon
import datetime
from discord.ext import commands
from discord import app_commands
from aiomcrcon import Client

from main import db, config, shop

class Store(commands.Cog):
    def __init__(self, client):
        self.client = client

    @app_commands.command(name="store", description="–ú–∞–≥–∞–∑–∏–Ω")
    @app_commands.default_permissions(permissions=0)
    async def store(self, interaction: discord.Integration):
        if db.connect():
            try:
                r = db.registered(interaction.user.id)
                if r[0] and r[1]:
                    embedVar = discord.Embed(title="–ú–∞–≥–∞–∑–∏–Ω", description="–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏.", color=config.bot.embedColor)
                    embedVar.add_field(name="–ü–æ–¥–ø–∏—Å–∫–∞ üìú", value="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É.", inline=False)
                    await interaction.response.send_message(embed=embedVar, view=Store.Rules(client=self.client))
                else:
                    await interaction.response.send_message('**–û—à–∏–±–∫–∞:** –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
            except Exception as ex:
                print(ex)
                await interaction.response.send_message(f'**–û—à–∏–±–∫–∞:** –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ: {config.bot.prefix}store')
            finally:
                db.close()

    class Rules(discord.ui.View):
        def __init__(self, client):
            super().__init__(timeout=None)
            self.client = client

        @discord.ui.button(label="–ü–æ–¥–ø–∏—Å–∫–∞", style=discord.ButtonStyle.green, custom_id="rule", emoji="üìú")
        async def rule(self, interaction: discord.Interaction, button: discord.ui.Button):
            embedVar = discord.Embed(title="–£—Å–ª–æ–≤–∏—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.", description='>>> –Ø, –Ω–∏–∂–µ–ø–æ–¥–ø–∏—Å–∞–≤—à–∏–π—Å—è (–¥–∞–ª–µ–µ ¬´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å¬ª), –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–∞–ª–µ–µ ¬´–ü–æ–¥–ø–∏—Å–∫–∞¬ª).\n \n –Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —Ç–µ–º, —á—Ç–æ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ü–æ–¥–ø–∏—Å–∫–∏ —è –ø–æ–ª—É—á–∞—é –¥–æ—Å—Ç—É–ø –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —É—Å–ª—É–≥–∞–º, –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è–º, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã –∏–ª–∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω—ã –ø–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.\n \n –Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ü–µ–Ω–∞ –ü–æ–¥–ø–∏—Å–∫–∏ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –ø–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ —á—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —É—Å–ª—É–≥–∞–º, –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –ø–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞. \n \n –Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —Ç–µ–º, —á—Ç–æ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞ –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –æ–ø–ª–∞—Ç—ã. \n \n –Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —Ç–µ–º, —á—Ç–æ –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞ –ü–æ–¥–ø–∏—Å–∫—É –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è.\n \n –Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —Ç–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤ —ç—Ç–æ–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–∏, –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã –ø–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞. \n \n –Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —Ç–µ–º, —á—Ç–æ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ü–æ–¥–ø–∏—Å–∫–∏ —è –ø—Ä–∏–Ω–∏–º–∞—é –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –∏ –ø—Ä–∏–Ω–∏–º–∞—é –≤—Å–µ —É—Å–ª–æ–≤–∏—è –∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è, –∏–∑–ª–æ–∂–µ–Ω–Ω—ã–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–∏.', color=0xf44336)
            embedVar.add_field(name="–£–∫–∞–∂–∏—Ç–µ —á—Ç–æ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è", value="", inline=False)
            await interaction.response.edit_message(embed=embedVar, view=Store.ButtonView(client=self.client))

    class ButtonView(discord.ui.View):
        def __init__(self, client):
            super().__init__(timeout=None)
            self.client = client

        @discord.ui.button(label="–Ø —Å–æ–≥–ª–∞—Å–µ–Ω", style=discord.ButtonStyle.green, custom_id="yes", emoji="‚úÖ")
        async def yes(self, interaction: discord.Interaction, button: discord.ui.Button):
            embedVar = discord.Embed(title="–ü–æ–¥–ø–∏—Å–∫–∞", description="–ü—Ä–æ—Ö–æ–¥–∫–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç!", color=config.bot.embedColor)
            embedVar.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–ò–Ω—Ñ–æ –ø—Ä–æ —Ä–æ–ª—å.", inline=False)
            await interaction.response.edit_message(embed=embedVar, view=Store.Pay(client=self.client))
    
        @discord.ui.button(label="–Ø –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω", style=discord.ButtonStyle.red, custom_id="no", emoji='‚úñÔ∏è')
        async def no(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.edit_message(content='–ë–µ–∑ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –º—ã –≤ –ø—Ä–∞–≤–µ –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –≤–∞–º –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏.', embed=None, view=None)

    class Pay(discord.ui.View):
        def __init__(self, client):
            super().__init__(timeout=None)
            self.client = client

        @discord.ui.button(label="–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏", style=discord.ButtonStyle.green, custom_id="pay", emoji="‚ö°")
        async def pay(self, interaction: discord.Interaction, button: discord.ui.Button):
            if db.connect():
                try:
                    coin = db.check_money(interaction.user.id)
                    guild = discord.utils.get(self.client.guilds, id = config.bot.guild)
                    member = guild.get_member(interaction.user.id)
                    for list_role in member.roles:
                        if list_role.id == shop.trealRole:
                            embedVar = discord.Embed(title="–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–∞–Ω–Ω—É—é –ø—Ä–∏–≤–µ–ª–µ–≥–∏—é.", description="–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.", color=0xf44336)
                            await interaction.response.edit_message(embed=embedVar)
                            return
                    if coin[1]['money'] >= 100:
                        # —Ä–∞–∑–±–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                        user = db.getUsernameByDiscordID(interaction.user.id)[1]['username']
                        try:
                            async with Client(config.rcon.host, config.rcon.port, config.rcon.password) as client:
                                response = await client.send_cmd(f'pardon {user}', 20)
                                print(response)
                        except aiomcrcon.RCONConnectionError:
                            with open('temp.txt', 'a') as file:
                                file.write(f'error pay subscriber {user} \n')
                        # –≤—ã–¥–∞—ë–º —Ä–æ–ª—å
                        await member.add_roles(guild.get_role(shop.trealRole))
                        # —É–¥–∞–ª—ë–µ–º —Ä—É–±–ª–∏ –∏ –≤—ã–¥–∞—ë–º –¥–∞—Ç—É
                        data = datetime.date.today() + datetime.timedelta(days=30)
                        db.add_data(data, interaction.user.id)
                        db.remove_money(interaction.user.id, 100)
                        # –í—ã—ã–æ–¥
                        embedVar = discord.Embed(title="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!", description="–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤—ã–±–æ—Ä.", color=0x00ff09)
                        await interaction.response.edit_message(embed=embedVar,view=None)
                    else:
                        embedVar = discord.Embed(title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", description="–ü–æ–∂–∞–ª—É–∏—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π —Å—á—ë—Ç!", color=0xf44336)
                        await interaction.response.edit_message(embed=embedVar)
                except Exception as ex:
                    print(ex)
                    await interaction.response.send_message('**–û—à–∏–±–∫–∞:** –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—ã–¥–∞—á–∏')
                finally:
                    db.close()

        @discord.ui.button(label='–ù–∞–∑–∞–¥', style=discord.ButtonStyle.red, custom_id='cancel', emoji='‚è™')
        async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
            embedVar = discord.Embed(title="–ú–∞–≥–∞–∑–∏–Ω", description="–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏.", color=config.bot.embedColor)
            embedVar.add_field(name="–ü–æ–¥–ø–∏—Å–∫–∞ üìú", value="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É.", inline=False)
            await interaction.response.edit_message(embed=embedVar, view=Store.Rules(client=self.client))

async def setup(client):
    if shop.enabled:
        await client.add_cog(Store(client))