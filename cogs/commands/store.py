import discord
import aiomcrcon
import datetime
from discord.ext import commands
from discord import app_commands
from aiomcrcon import Client

from main import db, config, shop

class Store(commands.Cog):
    def __init__(self, client):
        self.client = client

    async def start_message(self, interaction: discord.Integration, wheel: bool):
        embedVar = discord.Embed(title="–ú–∞–≥–∞–∑–∏–Ω", description="–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏.", color=config.bot.embedColor)
        embedVar.add_field(name="–ü–æ–¥–ø–∏—Å–∫–∞ üìú", value="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É.", inline=False)
        if wheel:
            await interaction.response.edit_message(embed=embedVar, view=Store.Select(client=self.client))
        else:
            await interaction.response.send_message(embed=embedVar, view=Store.Select(client=self.client))

    @app_commands.command(name="store", description="–ú–∞–≥–∞–∑–∏–Ω")
    @app_commands.default_permissions(permissions=0)
    async def store(self, interaction: discord.Integration):
        if db.connect():
            try:
                r = db.registered(interaction.user.id)
                if r[0] and r[1]:
                    await Store.start_message(self, interaction, wheel=False)
                else:
                    await interaction.response.send_message('**–û—à–∏–±–∫–∞:** –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
            except Exception as ex:
                print(ex)
                await interaction.response.send_message(f'**–û—à–∏–±–∫–∞:** –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ: {config.bot.prefix}store')
            finally:
                db.close()

    class Select(discord.ui.View):
        def __init__(self, client):
            super().__init__(timeout=None)
            self.client = client

        @discord.ui.select(placeholder="–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–æ–≤–∞—Ä", options=[
            discord.SelectOption(label="–ü–æ–¥–ø–∏—Å–∫–∞", description="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É.", emoji="üìú", value='subscription'),
            discord.SelectOption(label="–†–æ–ª—å VIP", description="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ä–æ–ª—å –≤–ª–∞—Å—Ç–∏.", emoji="üíé", value='vip'),
            discord.SelectOption(label="–†–æ–ª—å Admin", description="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ —Ä–æ–ª—å –≤–ª–∞—Å—Ç–∏.", emoji="‚öñÔ∏è", value='admin'),
            discord.SelectOption(label="–Ø–π—Ü–æ –î—Ä–∞–∫–æ–Ω–∞", description="–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç '–Ø–π—Ü–æ –î—Ä–∞–∫–æ–Ω–∞.'", emoji="ü¶á", value='item')
        ])
        async def callback(self, interaction:discord.Interaction, select: discord.ui.Select):
            if select.values[0] == 'subscription':
                embedVar = discord.Embed(title="–ü–æ–¥–ø–∏—Å–∫–∞", description="–ü—Ä–æ—Ö–æ–¥–∫–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç!", color=config.bot.embedColor)
                embedVar.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–ò–Ω—Ñ–æ –ø—Ä–æ —Ä–æ–ª—å.", inline=False)
                await interaction.response.edit_message(embed=embedVar, view=Store.Pay(client=self.client, money=100, type='subscription'))
            elif select.values[0] == 'vip':
                embedVar = discord.Embed(title="–†–æ–ª—å VIP", description="–†–æ–ª—å –≤—Å–µ–≤–ª–∞—Å—Ç–∏–µ", color=config.bot.embedColor)
                embedVar.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–ò–Ω—Ñ–æ –ø—Ä–æ —Ä–æ–ª—å.", inline=False)
                await interaction.response.edit_message(embed=embedVar, view=Store.Pay(client=self.client, money=50, type='game role', arg='vip'))
            elif select.values[0] == 'admin':
                embedVar = discord.Embed(title="–†–æ–ª—å Admin", description="–†–æ–ª—å admin discord", color=config.bot.embedColor)
                embedVar.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–ò–Ω—Ñ–æ –ø—Ä–æ —Ä–æ–ª—å.", inline=False)
                await interaction.response.edit_message(embed=embedVar, view=Store.Pay(client=self.client, money=50, type='discord role', arg=719317524994326649))
            elif select.values[0] == 'item':
                embedVar = discord.Embed(title="–Ø–π—Ü–æ –î—Ä–∞–∫–æ–Ω–∞", description="–ö—Ç–æ –∏–∑ –Ω–µ–≥–æ –≤—ã–ª—É–ø–∏—Ç—Å—è?", color=config.bot.embedColor)
                embedVar.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–ò–Ω—Ñ–æ –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç.", inline=False)
                await interaction.response.edit_message(embed=embedVar, view=Store.Pay(client=self.client, money=20, type='item', arg='minecraft:dragon_egg'))
    
    class Pay(discord.ui.View):
        def __init__(self, client, money:int, type, arg = None):
            super().__init__(timeout=None)
            self.client = client
            self.money = money
            self.type = type
            self.arg = arg

        @discord.ui.button(label="–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏", style=discord.ButtonStyle.green, custom_id="pay", emoji="‚ö°")
        async def pay(self, interaction: discord.Interaction, button: discord.ui.Button):
            if db.connect():
                try:
                    coin = db.check_money(interaction.user.id)
                    user = db.getUsernameByDiscordID(interaction.user.id)[1]['username']


                    if self.type == 'subscription':
                        guild = discord.utils.get(self.client.guilds, id = config.bot.guild)
                        member = guild.get_member(interaction.user.id)
                        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏
                        for list_role in member.roles:
                            if list_role.id == shop.trealRole:
                                embedVar = discord.Embed(title="–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–∞–Ω–Ω—É—é –ø—Ä–∏–≤–µ–ª–µ–≥–∏—é.", description="–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.", color=0xf44336)
                                await interaction.response.edit_message(embed=embedVar)
                                return
                        if coin[1]['money'] >= self.money:
                            # —Ä–∞–∑–±–∞–Ω–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                            try:
                                async with Client(config.rcon.host, config.rcon.port, config.rcon.password) as client:
                                    response = await client.send_cmd(f'pardon {user}', 20)
                                    print(response)
                            except aiomcrcon.RCONConnectionError:
                                with open('temp.txt', 'a') as file:
                                    file.write(f'error pay subscriber {user} \n')
                            # –≤—ã–¥–∞—ë–º —Ä–æ–ª—å
                            await member.add_roles(guild.get_role(shop.trealRole))
                            # —É–¥–∞–ª—è–µ–º —Ä—É–±–ª–∏ –∏ –≤—ã–¥–∞—ë–º –¥–∞—Ç—É
                            data = datetime.date.today() + datetime.timedelta(days=30)
                            db.add_data(data, interaction.user.id)
                            db.remove_money(interaction.user.id, self.money)
                            # –í—ã–≤–æ–¥
                            embedVar = discord.Embed(title="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!", description="–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤—ã–±–æ—Ä.", color=0x00ff09)
                            await interaction.response.edit_message(embed=embedVar,view=None)
                        else:
                            embedVar = discord.Embed(title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", description="–ü–æ–∂–∞–ª—É–∏—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π —Å—á—ë—Ç!", color=0xf44336)
                            await interaction.response.edit_message(embed=embedVar)


                    elif self.type == 'game role':
                        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏
                        if db.check_game_role(db.check_uuid(user)[1]['uuid'])[1]['permission'] == f'group.{self.arg}':
                            embedVar = discord.Embed(title="–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–∞–Ω–Ω—É—é –ø—Ä–∏–≤–µ–ª–µ–≥–∏—é.", description="–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.", color=0xf44336)
                            await interaction.response.edit_message(embed=embedVar)
                            return
                        if coin[1]['money'] >= self.money:
                            # –≤—ã–¥–∞—ë–º —Ä–æ–ª—å
                            try:
                                async with Client(config.rcon.host, config.rcon.port, config.rcon.password) as client:
                                    response = await client.send_cmd(f'lp user {user} parent set {self.arg}', 20)
                                    print(response)
                            except aiomcrcon.RCONConnectionError:
                                with open('temp.txt', 'a') as file:
                                    file.write(f'error pay game role {user} \n')
                            # –í—ã–≤–æ–¥
                            db.remove_money(interaction.user.id, self.money)
                            embedVar = discord.Embed(title="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!", description="–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤—ã–±–æ—Ä.", color=0x00ff09)
                            await interaction.response.edit_message(embed=embedVar,view=None)
                        else:
                            embedVar = discord.Embed(title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", description="–ü–æ–∂–∞–ª—É–∏—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π —Å—á—ë—Ç!", color=0xf44336)
                            await interaction.response.edit_message(embed=embedVar)


                    elif self.type == 'discord role':
                        guild = discord.utils.get(self.client.guilds, id = config.bot.guild)
                        member = guild.get_member(interaction.user.id)
                        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏
                        for list_role in member.roles:
                            if list_role.id == self.arg:
                                embedVar = discord.Embed(title="–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–∞–Ω–Ω—É—é –ø—Ä–∏–≤–µ–ª–µ–≥–∏—é.", description="–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.", color=0xf44336)
                                await interaction.response.edit_message(embed=embedVar)
                                return
                        if coin[1]['money'] >= self.money:
                            # –≤—ã–¥–∞—ë–º —Ä–æ–ª—å
                            await member.add_roles(guild.get_role(self.arg))
                            # —É–¥–∞–ª—è–µ–º —Ä—É–±–ª–∏ –∏ –≤—ã–¥–∞—ë–º –¥–∞—Ç—É
                            db.remove_money(interaction.user.id, self.money)
                            # –í—ã–≤–æ–¥
                            embedVar = discord.Embed(title="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!", description="–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤—ã–±–æ—Ä.", color=0x00ff09)
                            await interaction.response.edit_message(embed=embedVar,view=None)
                        else:
                            embedVar = discord.Embed(title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", description="–ü–æ–∂–∞–ª—É–∏—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π —Å—á—ë—Ç!", color=0xf44336)
                            await interaction.response.edit_message(embed=embedVar)
                            

                    elif self.type == 'item':
                        if coin[1]['money'] >= self.money:
                            # –≤—ã–¥–∞—ë–º –ø—Ä–µ–¥–º–µ—Ç
                            try:
                                async with Client(config.rcon.host, config.rcon.port, config.rcon.password) as client:
                                    response = await client.send_cmd(f'give {user} {self.arg}', 20)
                                    print(response)
                            except aiomcrcon.RCONConnectionError:
                                with open('temp.txt', 'a') as file:
                                    file.write(f'error pay item {user} \n')
                            # –í—ã–≤–æ–¥
                            db.remove_money(interaction.user.id, self.money)
                            embedVar = discord.Embed(title="–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!", description="–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤—ã–±–æ—Ä.", color=0x00ff09)
                            await interaction.response.edit_message(embed=embedVar,view=None)
                        else:
                            embedVar = discord.Embed(title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", description="–ü–æ–∂–∞–ª—É–∏—Å—Ç–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π —Å—á—ë—Ç!", color=0xf44336)
                            await interaction.response.edit_message(embed=embedVar)
                except Exception as ex:
                    print(ex)
                    await interaction.response.send_message('**–û—à–∏–±–∫–∞:** –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—ã–¥–∞—á–∏')
                finally:
                    db.close()

        @discord.ui.button(label='–ù–∞–∑–∞–¥', style=discord.ButtonStyle.red, custom_id='cancel', emoji='‚è™')
        async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
            await Store.start_message(self, interaction, wheel=True)

async def setup(client):
    if shop.enabled:
        await client.add_cog(Store(client))